// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.3
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hls_target_call_Loop_LB2D_buf_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_stream_V_value_V_dout,
        in_stream_V_value_V_empty_n,
        in_stream_V_value_V_read,
        slice_stream_V_value_V_din,
        slice_stream_V_value_V_full_n,
        slice_stream_V_value_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st5_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv3_1 = 3'b1;
parameter    ap_const_lv3_2 = 3'b10;
parameter    ap_const_lv3_3 = 3'b11;
parameter    ap_const_lv3_4 = 3'b100;
parameter    ap_const_lv3_5 = 3'b101;
parameter    ap_const_lv3_6 = 3'b110;
parameter    ap_const_lv10_288 = 10'b1010001000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv9_1E8 = 9'b111101000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv61_0 = 61'b0000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_FFFFFFFFFFFFFFF8 = 64'b1111111111111111111111111111111111111111111111111111111111111000;
parameter    ap_const_lv3_7 = 3'b111;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] in_stream_V_value_V_dout;
input   in_stream_V_value_V_empty_n;
output   in_stream_V_value_V_read;
output  [71:0] slice_stream_V_value_V_din;
input   slice_stream_V_value_V_full_n;
output   slice_stream_V_value_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_stream_V_value_V_read;
reg slice_stream_V_value_V_write;
reg    ap_done_reg = 1'b0;
//(* fsm_encoding = "none" *) 
reg   [3:0] ap_CS_fsm = 4'b1; // XXX
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_23;
reg   [63:0] write_idx_1_1_reg_338;
reg   [8:0] col_reg_349;
wire   [0:0] exitcond2_fu_360_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_49;
wire   [9:0] row_1_fu_366_p2;
reg   [9:0] row_1_reg_693;
wire   [0:0] icmp_fu_382_p2;
reg   [0:0] icmp_reg_698;
wire   [0:0] exitcond3_fu_388_p2;
reg   [0:0] exitcond3_reg_702;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_bdd_65;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_sig_bdd_76;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
wire   [8:0] col_1_fu_394_p2;
wire   [63:0] col_cast_fu_400_p1;
reg   [63:0] col_cast_reg_711;
wire   [63:0] p_write_idx_1_1_fu_434_p3;
reg   [63:0] p_write_idx_1_1_reg_723;
wire   [2:0] tmp_12_fu_442_p1;
reg   [2:0] tmp_12_reg_728;
wire   [2:0] tmp_13_fu_446_p1;
reg   [2:0] tmp_13_reg_780;
wire   [63:0] write_idx_1_2_fu_683_p2;
reg    ap_sig_cseq_ST_st5_fsm_3;
reg    ap_sig_bdd_122;
wire   [8:0] buffer_0_value_V_address0;
reg    buffer_0_value_V_ce0;
wire   [7:0] buffer_0_value_V_q0;
wire   [8:0] buffer_0_value_V_address1;
reg    buffer_0_value_V_ce1;
reg    buffer_0_value_V_we1;
wire   [7:0] buffer_0_value_V_d1;
wire   [8:0] buffer_1_value_V_address0;
reg    buffer_1_value_V_ce0;
wire   [7:0] buffer_1_value_V_q0;
wire   [8:0] buffer_1_value_V_address1;
reg    buffer_1_value_V_ce1;
reg    buffer_1_value_V_we1;
wire   [7:0] buffer_1_value_V_d1;
wire   [8:0] buffer_2_value_V_address0;
reg    buffer_2_value_V_ce0;
wire   [7:0] buffer_2_value_V_q0;
wire   [8:0] buffer_2_value_V_address1;
reg    buffer_2_value_V_ce1;
reg    buffer_2_value_V_we1;
wire   [7:0] buffer_2_value_V_d1;
wire   [8:0] buffer_3_value_V_address0;
reg    buffer_3_value_V_ce0;
wire   [7:0] buffer_3_value_V_q0;
wire   [8:0] buffer_3_value_V_address1;
reg    buffer_3_value_V_ce1;
reg    buffer_3_value_V_we1;
wire   [7:0] buffer_3_value_V_d1;
wire   [8:0] buffer_4_value_V_address0;
reg    buffer_4_value_V_ce0;
wire   [7:0] buffer_4_value_V_q0;
wire   [8:0] buffer_4_value_V_address1;
reg    buffer_4_value_V_ce1;
reg    buffer_4_value_V_we1;
wire   [7:0] buffer_4_value_V_d1;
wire   [8:0] buffer_5_value_V_address0;
reg    buffer_5_value_V_ce0;
wire   [7:0] buffer_5_value_V_q0;
wire   [8:0] buffer_5_value_V_address1;
reg    buffer_5_value_V_ce1;
reg    buffer_5_value_V_we1;
wire   [7:0] buffer_5_value_V_d1;
wire   [8:0] buffer_6_value_V_address0;
reg    buffer_6_value_V_ce0;
wire   [7:0] buffer_6_value_V_q0;
wire   [8:0] buffer_6_value_V_address1;
reg    buffer_6_value_V_ce1;
reg    buffer_6_value_V_we1;
wire   [7:0] buffer_6_value_V_d1;
wire   [8:0] buffer_7_value_V_address0;
reg    buffer_7_value_V_ce0;
wire   [7:0] buffer_7_value_V_q0;
wire   [8:0] buffer_7_value_V_address1;
reg    buffer_7_value_V_ce1;
reg    buffer_7_value_V_we1;
wire   [7:0] buffer_7_value_V_d1;
reg   [63:0] write_idx_1_reg_315;
reg    ap_sig_bdd_222;
reg   [9:0] row_reg_327;
reg   [63:0] write_idx_1_1_phi_fu_341_p4;
wire   [6:0] tmp_fu_372_p4;
wire   [60:0] tmp_11_fu_412_p4;
wire   [0:0] icmp1_fu_422_p2;
wire   [63:0] write_idx_1_3_fu_428_p2;
wire   [2:0] tmp_4_fu_476_p9;
wire   [2:0] tmp_5_fu_503_p9;
wire   [2:0] tmp_6_fu_530_p9;
wire   [2:0] tmp_7_fu_557_p9;
wire   [2:0] tmp_8_fu_584_p9;
wire   [2:0] tmp_9_fu_611_p9;
wire   [2:0] tmp_s_fu_638_p9;
wire   [7:0] tmp_s_fu_638_p10;
wire   [7:0] tmp_9_fu_611_p10;
wire   [7:0] tmp_8_fu_584_p10;
wire   [7:0] tmp_7_fu_557_p10;
wire   [7:0] tmp_6_fu_530_p10;
wire   [7:0] tmp_5_fu_503_p10;
wire   [7:0] tmp_4_fu_476_p10;
wire   [7:0] tmp_1_fu_450_p10;
reg   [3:0] ap_NS_fsm;


hls_target_call_Loop_LB2D_buf_proc_buffer_0_value_V #(
    .DataWidth( 8 ),
    .AddressRange( 488 ),
    .AddressWidth( 9 ))
buffer_0_value_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buffer_0_value_V_address0 ),
    .ce0( buffer_0_value_V_ce0 ),
    .q0( buffer_0_value_V_q0 ),
    .address1( buffer_0_value_V_address1 ),
    .ce1( buffer_0_value_V_ce1 ),
    .we1( buffer_0_value_V_we1 ),
    .d1( buffer_0_value_V_d1 )
);

hls_target_call_Loop_LB2D_buf_proc_buffer_0_value_V #(
    .DataWidth( 8 ),
    .AddressRange( 488 ),
    .AddressWidth( 9 ))
buffer_1_value_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buffer_1_value_V_address0 ),
    .ce0( buffer_1_value_V_ce0 ),
    .q0( buffer_1_value_V_q0 ),
    .address1( buffer_1_value_V_address1 ),
    .ce1( buffer_1_value_V_ce1 ),
    .we1( buffer_1_value_V_we1 ),
    .d1( buffer_1_value_V_d1 )
);

hls_target_call_Loop_LB2D_buf_proc_buffer_0_value_V #(
    .DataWidth( 8 ),
    .AddressRange( 488 ),
    .AddressWidth( 9 ))
buffer_2_value_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buffer_2_value_V_address0 ),
    .ce0( buffer_2_value_V_ce0 ),
    .q0( buffer_2_value_V_q0 ),
    .address1( buffer_2_value_V_address1 ),
    .ce1( buffer_2_value_V_ce1 ),
    .we1( buffer_2_value_V_we1 ),
    .d1( buffer_2_value_V_d1 )
);

hls_target_call_Loop_LB2D_buf_proc_buffer_0_value_V #(
    .DataWidth( 8 ),
    .AddressRange( 488 ),
    .AddressWidth( 9 ))
buffer_3_value_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buffer_3_value_V_address0 ),
    .ce0( buffer_3_value_V_ce0 ),
    .q0( buffer_3_value_V_q0 ),
    .address1( buffer_3_value_V_address1 ),
    .ce1( buffer_3_value_V_ce1 ),
    .we1( buffer_3_value_V_we1 ),
    .d1( buffer_3_value_V_d1 )
);

hls_target_call_Loop_LB2D_buf_proc_buffer_0_value_V #(
    .DataWidth( 8 ),
    .AddressRange( 488 ),
    .AddressWidth( 9 ))
buffer_4_value_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buffer_4_value_V_address0 ),
    .ce0( buffer_4_value_V_ce0 ),
    .q0( buffer_4_value_V_q0 ),
    .address1( buffer_4_value_V_address1 ),
    .ce1( buffer_4_value_V_ce1 ),
    .we1( buffer_4_value_V_we1 ),
    .d1( buffer_4_value_V_d1 )
);

hls_target_call_Loop_LB2D_buf_proc_buffer_0_value_V #(
    .DataWidth( 8 ),
    .AddressRange( 488 ),
    .AddressWidth( 9 ))
buffer_5_value_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buffer_5_value_V_address0 ),
    .ce0( buffer_5_value_V_ce0 ),
    .q0( buffer_5_value_V_q0 ),
    .address1( buffer_5_value_V_address1 ),
    .ce1( buffer_5_value_V_ce1 ),
    .we1( buffer_5_value_V_we1 ),
    .d1( buffer_5_value_V_d1 )
);

hls_target_call_Loop_LB2D_buf_proc_buffer_0_value_V #(
    .DataWidth( 8 ),
    .AddressRange( 488 ),
    .AddressWidth( 9 ))
buffer_6_value_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buffer_6_value_V_address0 ),
    .ce0( buffer_6_value_V_ce0 ),
    .q0( buffer_6_value_V_q0 ),
    .address1( buffer_6_value_V_address1 ),
    .ce1( buffer_6_value_V_ce1 ),
    .we1( buffer_6_value_V_we1 ),
    .d1( buffer_6_value_V_d1 )
);

hls_target_call_Loop_LB2D_buf_proc_buffer_0_value_V #(
    .DataWidth( 8 ),
    .AddressRange( 488 ),
    .AddressWidth( 9 ))
buffer_7_value_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buffer_7_value_V_address0 ),
    .ce0( buffer_7_value_V_ce0 ),
    .q0( buffer_7_value_V_q0 ),
    .address1( buffer_7_value_V_address1 ),
    .ce1( buffer_7_value_V_ce1 ),
    .we1( buffer_7_value_V_we1 ),
    .d1( buffer_7_value_V_d1 )
);

hls_target_mux_8to1_sel3_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
hls_target_mux_8to1_sel3_8_1_U3(
    .din1( buffer_0_value_V_q0 ),
    .din2( buffer_1_value_V_q0 ),
    .din3( buffer_2_value_V_q0 ),
    .din4( buffer_3_value_V_q0 ),
    .din5( buffer_4_value_V_q0 ),
    .din6( buffer_5_value_V_q0 ),
    .din7( buffer_6_value_V_q0 ),
    .din8( buffer_7_value_V_q0 ),
    .din9( tmp_12_reg_728 ),
    .dout( tmp_1_fu_450_p10 )
);

hls_target_mux_8to1_sel3_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
hls_target_mux_8to1_sel3_8_1_U4(
    .din1( buffer_0_value_V_q0 ),
    .din2( buffer_1_value_V_q0 ),
    .din3( buffer_2_value_V_q0 ),
    .din4( buffer_3_value_V_q0 ),
    .din5( buffer_4_value_V_q0 ),
    .din6( buffer_5_value_V_q0 ),
    .din7( buffer_6_value_V_q0 ),
    .din8( buffer_7_value_V_q0 ),
    .din9( tmp_4_fu_476_p9 ),
    .dout( tmp_4_fu_476_p10 )
);

hls_target_mux_8to1_sel3_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
hls_target_mux_8to1_sel3_8_1_U5(
    .din1( buffer_0_value_V_q0 ),
    .din2( buffer_1_value_V_q0 ),
    .din3( buffer_2_value_V_q0 ),
    .din4( buffer_3_value_V_q0 ),
    .din5( buffer_4_value_V_q0 ),
    .din6( buffer_5_value_V_q0 ),
    .din7( buffer_6_value_V_q0 ),
    .din8( buffer_7_value_V_q0 ),
    .din9( tmp_5_fu_503_p9 ),
    .dout( tmp_5_fu_503_p10 )
);

hls_target_mux_8to1_sel3_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
hls_target_mux_8to1_sel3_8_1_U6(
    .din1( buffer_0_value_V_q0 ),
    .din2( buffer_1_value_V_q0 ),
    .din3( buffer_2_value_V_q0 ),
    .din4( buffer_3_value_V_q0 ),
    .din5( buffer_4_value_V_q0 ),
    .din6( buffer_5_value_V_q0 ),
    .din7( buffer_6_value_V_q0 ),
    .din8( buffer_7_value_V_q0 ),
    .din9( tmp_6_fu_530_p9 ),
    .dout( tmp_6_fu_530_p10 )
);

hls_target_mux_8to1_sel3_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
hls_target_mux_8to1_sel3_8_1_U7(
    .din1( buffer_0_value_V_q0 ),
    .din2( buffer_1_value_V_q0 ),
    .din3( buffer_2_value_V_q0 ),
    .din4( buffer_3_value_V_q0 ),
    .din5( buffer_4_value_V_q0 ),
    .din6( buffer_5_value_V_q0 ),
    .din7( buffer_6_value_V_q0 ),
    .din8( buffer_7_value_V_q0 ),
    .din9( tmp_7_fu_557_p9 ),
    .dout( tmp_7_fu_557_p10 )
);

hls_target_mux_8to1_sel3_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
hls_target_mux_8to1_sel3_8_1_U8(
    .din1( buffer_0_value_V_q0 ),
    .din2( buffer_1_value_V_q0 ),
    .din3( buffer_2_value_V_q0 ),
    .din4( buffer_3_value_V_q0 ),
    .din5( buffer_4_value_V_q0 ),
    .din6( buffer_5_value_V_q0 ),
    .din7( buffer_6_value_V_q0 ),
    .din8( buffer_7_value_V_q0 ),
    .din9( tmp_8_fu_584_p9 ),
    .dout( tmp_8_fu_584_p10 )
);

hls_target_mux_8to1_sel3_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
hls_target_mux_8to1_sel3_8_1_U9(
    .din1( buffer_0_value_V_q0 ),
    .din2( buffer_1_value_V_q0 ),
    .din3( buffer_2_value_V_q0 ),
    .din4( buffer_3_value_V_q0 ),
    .din5( buffer_4_value_V_q0 ),
    .din6( buffer_5_value_V_q0 ),
    .din7( buffer_6_value_V_q0 ),
    .din8( buffer_7_value_V_q0 ),
    .din9( tmp_9_fu_611_p9 ),
    .dout( tmp_9_fu_611_p10 )
);

hls_target_mux_8to1_sel3_8_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 3 ),
    .dout_WIDTH( 8 ))
hls_target_mux_8to1_sel3_8_1_U10(
    .din1( buffer_0_value_V_q0 ),
    .din2( buffer_1_value_V_q0 ),
    .din3( buffer_2_value_V_q0 ),
    .din4( buffer_3_value_V_q0 ),
    .din5( buffer_4_value_V_q0 ),
    .din6( buffer_5_value_V_q0 ),
    .din7( buffer_6_value_V_q0 ),
    .din8( buffer_7_value_V_q0 ),
    .din9( tmp_s_fu_638_p9 ),
    .dout( tmp_s_fu_638_p10 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond2_fu_360_p2 == ap_const_lv1_0))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_388_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_360_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk) begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond3_fu_388_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_360_p2 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_388_p2)))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond3_fu_388_p2))) begin
        col_reg_349 <= col_1_fu_394_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_360_p2 == ap_const_lv1_0))) begin
        col_reg_349 <= ap_const_lv9_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        row_reg_327 <= row_1_reg_693;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_222)) begin
        row_reg_327 <= ap_const_lv10_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == exitcond3_reg_702) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        write_idx_1_1_reg_338 <= p_write_idx_1_1_reg_723;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_360_p2 == ap_const_lv1_0))) begin
        write_idx_1_1_reg_338 <= write_idx_1_reg_315;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_3)) begin
        write_idx_1_reg_315 <= write_idx_1_2_fu_683_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_222)) begin
        write_idx_1_reg_315 <= ap_const_lv64_0;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond3_fu_388_p2))) begin
        col_cast_reg_711[8 : 0] <= col_cast_fu_400_p1[8 : 0];
        tmp_13_reg_780 <= tmp_13_fu_446_p1;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        exitcond3_reg_702 <= exitcond3_fu_388_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond2_fu_360_p2 == ap_const_lv1_0))) begin
        icmp_reg_698 <= icmp_fu_382_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond3_fu_388_p2))) begin
        p_write_idx_1_1_reg_723 <= p_write_idx_1_1_fu_434_p3;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        row_1_reg_693 <= row_1_fu_366_p2;
    end
end

/// assign process. ///
always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (icmp_reg_698 == ap_const_lv1_0) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (ap_const_lv1_0 == exitcond3_fu_388_p2))) begin
        tmp_12_reg_728 <= tmp_12_fu_442_p1;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or exitcond2_fu_360_p2 or ap_sig_cseq_ST_st2_fsm_1) begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond2_fu_360_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (exitcond2_fu_360_p2 or ap_sig_cseq_ST_st2_fsm_1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond2_fu_360_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. ///
always @ (ap_sig_bdd_65) begin
    if (ap_sig_bdd_65) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_23) begin
    if (ap_sig_bdd_23) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_49) begin
    if (ap_sig_bdd_49) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_3 assign process. ///
always @ (ap_sig_bdd_122) begin
    if (ap_sig_bdd_122) begin
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_0;
    end
end

/// buffer_0_value_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_0_value_V_ce0 = ap_const_logic_1;
    end else begin
        buffer_0_value_V_ce0 = ap_const_logic_0;
    end
end

/// buffer_0_value_V_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_0_value_V_ce1 = ap_const_logic_1;
    end else begin
        buffer_0_value_V_ce1 = ap_const_logic_0;
    end
end

/// buffer_0_value_V_we1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1 or tmp_13_reg_780) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (tmp_13_reg_780 == ap_const_lv3_0))) begin
        buffer_0_value_V_we1 = ap_const_logic_1;
    end else begin
        buffer_0_value_V_we1 = ap_const_logic_0;
    end
end

/// buffer_1_value_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_1_value_V_ce0 = ap_const_logic_1;
    end else begin
        buffer_1_value_V_ce0 = ap_const_logic_0;
    end
end

/// buffer_1_value_V_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_1_value_V_ce1 = ap_const_logic_1;
    end else begin
        buffer_1_value_V_ce1 = ap_const_logic_0;
    end
end

/// buffer_1_value_V_we1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1 or tmp_13_reg_780) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (tmp_13_reg_780 == ap_const_lv3_1))) begin
        buffer_1_value_V_we1 = ap_const_logic_1;
    end else begin
        buffer_1_value_V_we1 = ap_const_logic_0;
    end
end

/// buffer_2_value_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_2_value_V_ce0 = ap_const_logic_1;
    end else begin
        buffer_2_value_V_ce0 = ap_const_logic_0;
    end
end

/// buffer_2_value_V_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_2_value_V_ce1 = ap_const_logic_1;
    end else begin
        buffer_2_value_V_ce1 = ap_const_logic_0;
    end
end

/// buffer_2_value_V_we1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1 or tmp_13_reg_780) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (tmp_13_reg_780 == ap_const_lv3_2))) begin
        buffer_2_value_V_we1 = ap_const_logic_1;
    end else begin
        buffer_2_value_V_we1 = ap_const_logic_0;
    end
end

/// buffer_3_value_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_3_value_V_ce0 = ap_const_logic_1;
    end else begin
        buffer_3_value_V_ce0 = ap_const_logic_0;
    end
end

/// buffer_3_value_V_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_3_value_V_ce1 = ap_const_logic_1;
    end else begin
        buffer_3_value_V_ce1 = ap_const_logic_0;
    end
end

/// buffer_3_value_V_we1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1 or tmp_13_reg_780) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (tmp_13_reg_780 == ap_const_lv3_3))) begin
        buffer_3_value_V_we1 = ap_const_logic_1;
    end else begin
        buffer_3_value_V_we1 = ap_const_logic_0;
    end
end

/// buffer_4_value_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_4_value_V_ce0 = ap_const_logic_1;
    end else begin
        buffer_4_value_V_ce0 = ap_const_logic_0;
    end
end

/// buffer_4_value_V_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_4_value_V_ce1 = ap_const_logic_1;
    end else begin
        buffer_4_value_V_ce1 = ap_const_logic_0;
    end
end

/// buffer_4_value_V_we1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1 or tmp_13_reg_780) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (tmp_13_reg_780 == ap_const_lv3_4))) begin
        buffer_4_value_V_we1 = ap_const_logic_1;
    end else begin
        buffer_4_value_V_we1 = ap_const_logic_0;
    end
end

/// buffer_5_value_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_5_value_V_ce0 = ap_const_logic_1;
    end else begin
        buffer_5_value_V_ce0 = ap_const_logic_0;
    end
end

/// buffer_5_value_V_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_5_value_V_ce1 = ap_const_logic_1;
    end else begin
        buffer_5_value_V_ce1 = ap_const_logic_0;
    end
end

/// buffer_5_value_V_we1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1 or tmp_13_reg_780) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (tmp_13_reg_780 == ap_const_lv3_5))) begin
        buffer_5_value_V_we1 = ap_const_logic_1;
    end else begin
        buffer_5_value_V_we1 = ap_const_logic_0;
    end
end

/// buffer_6_value_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_6_value_V_ce0 = ap_const_logic_1;
    end else begin
        buffer_6_value_V_ce0 = ap_const_logic_0;
    end
end

/// buffer_6_value_V_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_6_value_V_ce1 = ap_const_logic_1;
    end else begin
        buffer_6_value_V_ce1 = ap_const_logic_0;
    end
end

/// buffer_6_value_V_we1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1 or tmp_13_reg_780) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & (tmp_13_reg_780 == ap_const_lv3_6))) begin
        buffer_6_value_V_we1 = ap_const_logic_1;
    end else begin
        buffer_6_value_V_we1 = ap_const_logic_0;
    end
end

/// buffer_7_value_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_7_value_V_ce0 = ap_const_logic_1;
    end else begin
        buffer_7_value_V_ce0 = ap_const_logic_0;
    end
end

/// buffer_7_value_V_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        buffer_7_value_V_ce1 = ap_const_logic_1;
    end else begin
        buffer_7_value_V_ce1 = ap_const_logic_0;
    end
end

/// buffer_7_value_V_we1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1 or tmp_13_reg_780) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(tmp_13_reg_780 == ap_const_lv3_6) & ~(tmp_13_reg_780 == ap_const_lv3_5) & ~(tmp_13_reg_780 == ap_const_lv3_4) & ~(tmp_13_reg_780 == ap_const_lv3_3) & ~(tmp_13_reg_780 == ap_const_lv3_2) & ~(tmp_13_reg_780 == ap_const_lv3_1) & ~(tmp_13_reg_780 == ap_const_lv3_0))) begin
        buffer_7_value_V_we1 = ap_const_logic_1;
    end else begin
        buffer_7_value_V_we1 = ap_const_logic_0;
    end
end

/// in_stream_V_value_V_read assign process. ///
always @ (exitcond3_reg_702 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == exitcond3_reg_702) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        in_stream_V_value_V_read = ap_const_logic_1;
    end else begin
        in_stream_V_value_V_read = ap_const_logic_0;
    end
end

/// slice_stream_V_value_V_write assign process. ///
always @ (icmp_reg_698 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (icmp_reg_698 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
        slice_stream_V_value_V_write = ap_const_logic_1;
    end else begin
        slice_stream_V_value_V_write = ap_const_logic_0;
    end
end

/// write_idx_1_1_phi_fu_341_p4 assign process. ///
always @ (write_idx_1_1_reg_338 or exitcond3_reg_702 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it1 or p_write_idx_1_1_reg_723) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_lv1_0 == exitcond3_reg_702) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
        write_idx_1_1_phi_fu_341_p4 = p_write_idx_1_1_reg_723;
    end else begin
        write_idx_1_1_phi_fu_341_p4 = write_idx_1_1_reg_338;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or exitcond2_fu_360_p2 or exitcond3_fu_388_p2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_76 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_222) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_222) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(exitcond2_fu_360_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_388_p2))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~(ap_sig_bdd_76 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) & ~(ap_const_lv1_0 == exitcond3_fu_388_p2))) begin
                ap_NS_fsm = ap_ST_st5_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st5_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_122 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_122 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_222 assign process. ///
always @ (ap_start or ap_done_reg) begin
    ap_sig_bdd_222 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_23 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_23 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_49 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_49 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_65 assign process. ///
always @ (ap_CS_fsm) begin
    ap_sig_bdd_65 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_76 assign process. ///
always @ (in_stream_V_value_V_empty_n or slice_stream_V_value_V_full_n or icmp_reg_698 or exitcond3_reg_702) begin
    ap_sig_bdd_76 = (((in_stream_V_value_V_empty_n == ap_const_logic_0) & (ap_const_lv1_0 == exitcond3_reg_702)) | ((slice_stream_V_value_V_full_n == ap_const_logic_0) & (icmp_reg_698 == ap_const_lv1_0)));
end
assign buffer_0_value_V_address0 = col_cast_fu_400_p1;
assign buffer_0_value_V_address1 = col_cast_reg_711;
assign buffer_0_value_V_d1 = in_stream_V_value_V_dout;
assign buffer_1_value_V_address0 = col_cast_fu_400_p1;
assign buffer_1_value_V_address1 = col_cast_reg_711;
assign buffer_1_value_V_d1 = in_stream_V_value_V_dout;
assign buffer_2_value_V_address0 = col_cast_fu_400_p1;
assign buffer_2_value_V_address1 = col_cast_reg_711;
assign buffer_2_value_V_d1 = in_stream_V_value_V_dout;
assign buffer_3_value_V_address0 = col_cast_fu_400_p1;
assign buffer_3_value_V_address1 = col_cast_reg_711;
assign buffer_3_value_V_d1 = in_stream_V_value_V_dout;
assign buffer_4_value_V_address0 = col_cast_fu_400_p1;
assign buffer_4_value_V_address1 = col_cast_reg_711;
assign buffer_4_value_V_d1 = in_stream_V_value_V_dout;
assign buffer_5_value_V_address0 = col_cast_fu_400_p1;
assign buffer_5_value_V_address1 = col_cast_reg_711;
assign buffer_5_value_V_d1 = in_stream_V_value_V_dout;
assign buffer_6_value_V_address0 = col_cast_fu_400_p1;
assign buffer_6_value_V_address1 = col_cast_reg_711;
assign buffer_6_value_V_d1 = in_stream_V_value_V_dout;
assign buffer_7_value_V_address0 = col_cast_fu_400_p1;
assign buffer_7_value_V_address1 = col_cast_reg_711;
assign buffer_7_value_V_d1 = in_stream_V_value_V_dout;
assign col_1_fu_394_p2 = (col_reg_349 + ap_const_lv9_1);
assign col_cast_fu_400_p1 = col_reg_349;
assign exitcond2_fu_360_p2 = (row_reg_327 == ap_const_lv10_288? 1'b1: 1'b0);
assign exitcond3_fu_388_p2 = (col_reg_349 == ap_const_lv9_1E8? 1'b1: 1'b0);
assign icmp1_fu_422_p2 = (tmp_11_fu_412_p4 != ap_const_lv61_0? 1'b1: 1'b0);
assign icmp_fu_382_p2 = (tmp_fu_372_p4 == ap_const_lv7_0? 1'b1: 1'b0);
assign p_write_idx_1_1_fu_434_p3 = ((icmp1_fu_422_p2[0:0] === 1'b1) ? write_idx_1_3_fu_428_p2 : write_idx_1_1_phi_fu_341_p4);
assign row_1_fu_366_p2 = (row_reg_327 + ap_const_lv10_1);
assign slice_stream_V_value_V_din = {{{{{{{{{in_stream_V_value_V_dout}, {tmp_s_fu_638_p10}}, {tmp_9_fu_611_p10}}, {tmp_8_fu_584_p10}}, {tmp_7_fu_557_p10}}, {tmp_6_fu_530_p10}}, {tmp_5_fu_503_p10}}, {tmp_4_fu_476_p10}}, {tmp_1_fu_450_p10}};
assign tmp_11_fu_412_p4 = {{write_idx_1_1_phi_fu_341_p4[ap_const_lv32_3F : ap_const_lv32_3]}};
assign tmp_12_fu_442_p1 = p_write_idx_1_1_fu_434_p3[2:0];
assign tmp_13_fu_446_p1 = p_write_idx_1_1_fu_434_p3[2:0];
assign tmp_4_fu_476_p9 = (ap_const_lv3_1 + tmp_12_reg_728);
assign tmp_5_fu_503_p9 = (ap_const_lv3_2 + tmp_12_reg_728);
assign tmp_6_fu_530_p9 = (ap_const_lv3_3 + tmp_12_reg_728);
assign tmp_7_fu_557_p9 = (tmp_12_reg_728 ^ ap_const_lv3_4);
assign tmp_8_fu_584_p9 = ($signed(ap_const_lv3_5) + $signed(tmp_12_reg_728));
assign tmp_9_fu_611_p9 = ($signed(ap_const_lv3_6) + $signed(tmp_12_reg_728));
assign tmp_fu_372_p4 = {{row_reg_327[ap_const_lv32_9 : ap_const_lv32_3]}};
assign tmp_s_fu_638_p9 = ($signed(ap_const_lv3_7) + $signed(tmp_12_reg_728));
assign write_idx_1_2_fu_683_p2 = (write_idx_1_1_reg_338 + ap_const_lv64_1);
assign write_idx_1_3_fu_428_p2 = ($signed(write_idx_1_1_phi_fu_341_p4) + $signed(ap_const_lv64_FFFFFFFFFFFFFFF8));
always @ (posedge ap_clk) begin
    col_cast_reg_711[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end



endmodule //hls_target_call_Loop_LB2D_buf_proc

