$version Generated by VerilatedVcd $end
$date Sat Feb 29 20:06:57 2020
 $end
$timescale   1ns $end

 $scope module top $end
  $var wire  1 [4 clk $end
  $var wire 32 _6 eoi [31:0] $end
  $var wire 32 W6 irq [31:0] $end
  $var wire 32 -5 mem_addr [31:0] $end
  $var wire  1 {4 mem_instr $end
  $var wire 32 ]5 mem_la_addr [31:0] $end
  $var wire  1 M5 mem_la_read $end
  $var wire 32 e5 mem_la_wdata [31:0] $end
  $var wire  1 U5 mem_la_write $end
  $var wire  4 m5 mem_la_wstrb [3:0] $end
  $var wire 32 E5 mem_rdata [31:0] $end
  $var wire  1 %5 mem_ready $end
  $var wire  1 s4 mem_valid $end
  $var wire 32 55 mem_wdata [31:0] $end
  $var wire  4 =5 mem_wstrb [3:0] $end
  $var wire 32 }5 pcpi_insn [31:0] $end
  $var wire 32 ?6 pcpi_rd [31:0] $end
  $var wire  1 O6 pcpi_ready $end
  $var wire 32 '6 pcpi_rs1 [31:0] $end
  $var wire 32 /6 pcpi_rs2 [31:0] $end
  $var wire  1 u5 pcpi_valid $end
  $var wire  1 G6 pcpi_wait $end
  $var wire  1 76 pcpi_wr $end
  $var wire  1 c4 resetn $end
  $var wire  1 17 rvfi_halt $end
  $var wire 32 !7 rvfi_insn [31:0] $end
  $var wire  1 97 rvfi_intr $end
  $var wire 32 +8 rvfi_mem_addr [31:0] $end
  $var wire 32 C8 rvfi_mem_rdata [31:0] $end
  $var wire  4 38 rvfi_mem_rmask [3:0] $end
  $var wire 32 K8 rvfi_mem_wdata [31:0] $end
  $var wire  4 ;8 rvfi_mem_wmask [3:0] $end
  $var wire  2 A7 rvfi_mode [1:0] $end
  $var wire 64 o6 rvfi_order [63:0] $end
  $var wire 32 y7 rvfi_pc_rdata [31:0] $end
  $var wire 32 #8 rvfi_pc_wdata [31:0] $end
  $var wire  5 i7 rvfi_rd_addr [4:0] $end
  $var wire 32 q7 rvfi_rd_wdata [31:0] $end
  $var wire  5 I7 rvfi_rs1_addr [4:0] $end
  $var wire 32 Y7 rvfi_rs1_rdata [31:0] $end
  $var wire  5 Q7 rvfi_rs2_addr [4:0] $end
  $var wire 32 a7 rvfi_rs2_rdata [31:0] $end
  $var wire  1 )7 rvfi_trap $end
  $var wire  1 g6 rvfi_valid $end
  $var wire 36 [8 trace_data [35:0] $end
  $var wire  1 S8 trace_valid $end
  $var wire  1 k4 trap $end
  $scope module picorv32 $end
   $var wire 32 s8 BARREL_SHIFTER [31:0] $end
   $var wire 32 k8 CATCH_ILLINSN [31:0] $end
   $var wire 32 k8 CATCH_MISALIGN [31:0] $end
   $var wire 32 s8 COMPRESSED_ISA [31:0] $end
   $var wire 32 k8 ENABLE_COUNTERS [31:0] $end
   $var wire 32 k8 ENABLE_COUNTERS64 [31:0] $end
   $var wire 32 s8 ENABLE_DIV [31:0] $end
   $var wire 32 s8 ENABLE_FAST_MUL [31:0] $end
   $var wire 32 s8 ENABLE_IRQ [31:0] $end
   $var wire 32 k8 ENABLE_IRQ_QREGS [31:0] $end
   $var wire 32 k8 ENABLE_IRQ_TIMER [31:0] $end
   $var wire 32 s8 ENABLE_MUL [31:0] $end
   $var wire 32 s8 ENABLE_PCPI [31:0] $end
   $var wire 32 k8 ENABLE_REGS_16_31 [31:0] $end
   $var wire 32 k8 ENABLE_REGS_DUALPORT [31:0] $end
   $var wire 32 s8 ENABLE_TRACE [31:0] $end
   $var wire 32 %9 LATCHED_IRQ [31:0] $end
   $var wire 32 s8 LATCHED_MEM_RDATA [31:0] $end
   $var wire 32 {8 MASKED_IRQ [31:0] $end
   $var wire 32 -9 PROGADDR_IRQ [31:0] $end
   $var wire 32 {8 PROGADDR_RESET [31:0] $end
   $var wire 32 s8 REGS_INIT_ZERO [31:0] $end
   $var wire 32 %9 STACKADDR [31:0] $end
   $var wire 36 u9 TRACE_ADDR [35:0] $end
   $var wire 36 e9 TRACE_BRANCH [35:0] $end
   $var wire 36 ': TRACE_IRQ [35:0] $end
   $var wire 32 s8 TWO_CYCLE_ALU [31:0] $end
   $var wire 32 s8 TWO_CYCLE_COMPARE [31:0] $end
   $var wire 32 k8 TWO_STAGE_SHIFT [31:0] $end
   $var wire  1 ]9 WITH_PCPI [0:0] $end
   $var wire 32 #4 alu_add_sub [31:0] $end
   $var wire  1 ]! alu_eq $end
   $var wire  1 m! alu_lts $end
   $var wire  1 e! alu_ltu $end
   $var wire 32 M! alu_out [31:0] $end
   $var wire  1 U! alu_out_0 $end
   $var wire  1 i3 alu_out_0_q $end
   $var wire 32 a3 alu_out_q [31:0] $end
   $var wire 32 +4 alu_shl [31:0] $end
   $var wire 32 34 alu_shr [31:0] $end
   $var wire  1 q3 alu_wait $end
   $var wire  1 y3 alu_wait_2 $end
   $var wire 64 U1 cached_ascii_instr [63:0] $end
   $var wire 32 e1 cached_insn_imm [31:0] $end
   $var wire 32 m1 cached_insn_opcode [31:0] $end
   $var wire  5 '2 cached_insn_rd [4:0] $end
   $var wire  5 u1 cached_insn_rs1 [4:0] $end
   $var wire  5 }1 cached_insn_rs2 [4:0] $end
   $var wire  1 G" clear_prefetched_high_word $end
   $var wire  1 ;4 clear_prefetched_high_word_q $end
   $var wire  1 [4 clk $end
   $var wire  1 /. compressed_instr $end
   $var wire 64 _" count_cycle [63:0] $end
   $var wire 64 o" count_instr [63:0] $end
   $var wire  8 /2 cpu_state [7:0] $end
   $var wire  8 g: cpu_state_exec [7:0] $end
   $var wire  8 O: cpu_state_fetch [7:0] $end
   $var wire  8 W: cpu_state_ld_rs1 [7:0] $end
   $var wire  8 _: cpu_state_ld_rs2 [7:0] $end
   $var wire  8 !; cpu_state_ldmem [7:0] $end
   $var wire  8 o: cpu_state_shift [7:0] $end
   $var wire  8 w: cpu_state_stmem [7:0] $end
   $var wire  8 G: cpu_state_trap [7:0] $end
   $var wire 32 +$ cpuregs(0) [31:0] $end
   $var wire 32 ,$ cpuregs(1) [31:0] $end
   $var wire 32 5$ cpuregs(10) [31:0] $end
   $var wire 32 6$ cpuregs(11) [31:0] $end
   $var wire 32 7$ cpuregs(12) [31:0] $end
   $var wire 32 8$ cpuregs(13) [31:0] $end
   $var wire 32 9$ cpuregs(14) [31:0] $end
   $var wire 32 :$ cpuregs(15) [31:0] $end
   $var wire 32 ;$ cpuregs(16) [31:0] $end
   $var wire 32 <$ cpuregs(17) [31:0] $end
   $var wire 32 =$ cpuregs(18) [31:0] $end
   $var wire 32 >$ cpuregs(19) [31:0] $end
   $var wire 32 -$ cpuregs(2) [31:0] $end
   $var wire 32 ?$ cpuregs(20) [31:0] $end
   $var wire 32 @$ cpuregs(21) [31:0] $end
   $var wire 32 A$ cpuregs(22) [31:0] $end
   $var wire 32 B$ cpuregs(23) [31:0] $end
   $var wire 32 C$ cpuregs(24) [31:0] $end
   $var wire 32 D$ cpuregs(25) [31:0] $end
   $var wire 32 E$ cpuregs(26) [31:0] $end
   $var wire 32 F$ cpuregs(27) [31:0] $end
   $var wire 32 G$ cpuregs(28) [31:0] $end
   $var wire 32 H$ cpuregs(29) [31:0] $end
   $var wire 32 .$ cpuregs(3) [31:0] $end
   $var wire 32 I$ cpuregs(30) [31:0] $end
   $var wire 32 J$ cpuregs(31) [31:0] $end
   $var wire 32 /$ cpuregs(4) [31:0] $end
   $var wire 32 0$ cpuregs(5) [31:0] $end
   $var wire 32 1$ cpuregs(6) [31:0] $end
   $var wire 32 2$ cpuregs(7) [31:0] $end
   $var wire 32 3$ cpuregs(8) [31:0] $end
   $var wire 32 4$ cpuregs(9) [31:0] $end
   $var wire 32 '" cpuregs_rs1 [31:0] $end
   $var wire 32 /" cpuregs_rs2 [31:0] $end
   $var wire 32 }! cpuregs_wrdata [31:0] $end
   $var wire  1 u! cpuregs_write $end
   $var wire 32 A3 current_pc [31:0] $end
   $var wire 64 S dbg_ascii_instr [63:0] $end
   $var wire 128 -! dbg_ascii_state [127:0] $end
   $var wire 32 Y# dbg_insn_addr [31:0] $end
   $var wire 32 c dbg_insn_imm [31:0] $end
   $var wire 32 # dbg_insn_opcode [31:0] $end
   $var wire  5 { dbg_insn_rd [4:0] $end
   $var wire  5 k dbg_insn_rs1 [4:0] $end
   $var wire  5 s dbg_insn_rs2 [4:0] $end
   $var wire  1 C4 dbg_irq_call $end
   $var wire  1 K4 dbg_irq_enter $end
   $var wire 32 S4 dbg_irq_ret [31:0] $end
   $var wire 32 -5 dbg_mem_addr [31:0] $end
   $var wire  1 {4 dbg_mem_instr $end
   $var wire 32 E5 dbg_mem_rdata [31:0] $end
   $var wire  1 %5 dbg_mem_ready $end
   $var wire  1 s4 dbg_mem_valid $end
   $var wire 32 55 dbg_mem_wdata [31:0] $end
   $var wire  4 =5 dbg_mem_wstrb [3:0] $end
   $var wire  1 E1 dbg_next $end
   $var wire 32 s8 dbg_reg_x0 [31:0] $end
   $var wire 32 o& dbg_reg_x1 [31:0] $end
   $var wire 32 Y' dbg_reg_x10 [31:0] $end
   $var wire 32 a' dbg_reg_x11 [31:0] $end
   $var wire 32 i' dbg_reg_x12 [31:0] $end
   $var wire 32 q' dbg_reg_x13 [31:0] $end
   $var wire 32 y' dbg_reg_x14 [31:0] $end
   $var wire 32 #( dbg_reg_x15 [31:0] $end
   $var wire 32 +( dbg_reg_x16 [31:0] $end
   $var wire 32 3( dbg_reg_x17 [31:0] $end
   $var wire 32 ;( dbg_reg_x18 [31:0] $end
   $var wire 32 C( dbg_reg_x19 [31:0] $end
   $var wire 32 w& dbg_reg_x2 [31:0] $end
   $var wire 32 K( dbg_reg_x20 [31:0] $end
   $var wire 32 S( dbg_reg_x21 [31:0] $end
   $var wire 32 [( dbg_reg_x22 [31:0] $end
   $var wire 32 c( dbg_reg_x23 [31:0] $end
   $var wire 32 k( dbg_reg_x24 [31:0] $end
   $var wire 32 s( dbg_reg_x25 [31:0] $end
   $var wire 32 {( dbg_reg_x26 [31:0] $end
   $var wire 32 %) dbg_reg_x27 [31:0] $end
   $var wire 32 -) dbg_reg_x28 [31:0] $end
   $var wire 32 5) dbg_reg_x29 [31:0] $end
   $var wire 32 !' dbg_reg_x3 [31:0] $end
   $var wire 32 =) dbg_reg_x30 [31:0] $end
   $var wire 32 E) dbg_reg_x31 [31:0] $end
   $var wire 32 )' dbg_reg_x4 [31:0] $end
   $var wire 32 1' dbg_reg_x5 [31:0] $end
   $var wire 32 9' dbg_reg_x6 [31:0] $end
   $var wire 32 A' dbg_reg_x7 [31:0] $end
   $var wire 32 I' dbg_reg_x8 [31:0] $end
   $var wire 32 Q' dbg_reg_x9 [31:0] $end
   $var wire 32 K0 dbg_rs1val [31:0] $end
   $var wire  1 [0 dbg_rs1val_valid $end
   $var wire 32 S0 dbg_rs2val [31:0] $end
   $var wire  1 c0 dbg_rs2val_valid $end
   $var wire  1 M1 dbg_valid_insn $end
   $var wire 32 g. decoded_imm [31:0] $end
   $var wire 32 o. decoded_imm_j [31:0] $end
   $var wire  5 O. decoded_rd [4:0] $end
   $var wire  5 1; decoded_rs [4:0] $end
   $var wire  5 W. decoded_rs1 [4:0] $end
   $var wire  5 _. decoded_rs2 [4:0] $end
   $var wire  1 )/ decoder_pseudo_trigger $end
   $var wire  1 1/ decoder_pseudo_trigger_q $end
   $var wire  1 w. decoder_trigger $end
   $var wire  1 !/ decoder_trigger_q $end
   $var wire  1 Y3 do_waitirq $end
   $var wire 32 _6 eoi [31:0] $end
   $var wire  1 c, instr_add $end
   $var wire  1 y+ instr_addi $end
   $var wire  1 M- instr_and $end
   $var wire  1 C, instr_andi $end
   $var wire  1 O* instr_auipc $end
   $var wire  1 g* instr_beq $end
   $var wire  1 !+ instr_bge $end
   $var wire  1 1+ instr_bgeu $end
   $var wire  1 w* instr_blt $end
   $var wire  1 )+ instr_bltu $end
   $var wire  1 o* instr_bne $end
   $var wire  1 u- instr_ecall_ebreak $end
   $var wire  1 }- instr_getq $end
   $var wire  1 W* instr_jal $end
   $var wire  1 _* instr_jalr $end
   $var wire  1 9+ instr_lb $end
   $var wire  1 Q+ instr_lbu $end
   $var wire  1 A+ instr_lh $end
   $var wire  1 Y+ instr_lhu $end
   $var wire  1 G* instr_lui $end
   $var wire  1 I+ instr_lw $end
   $var wire  1 7. instr_maskirq $end
   $var wire  1 E- instr_or $end
   $var wire  1 ;, instr_ori $end
   $var wire  1 U- instr_rdcycle $end
   $var wire  1 ]- instr_rdcycleh $end
   $var wire  1 e- instr_rdinstr $end
   $var wire  1 m- instr_rdinstrh $end
   $var wire  1 /. instr_retirq $end
   $var wire  1 a+ instr_sb $end
   $var wire  1 '. instr_setq $end
   $var wire  1 i+ instr_sh $end
   $var wire  1 s, instr_sll $end
   $var wire  1 K, instr_slli $end
   $var wire  1 {, instr_slt $end
   $var wire  1 #, instr_slti $end
   $var wire  1 +, instr_sltiu $end
   $var wire  1 %- instr_sltu $end
   $var wire  1 =- instr_sra $end
   $var wire  1 [, instr_srai $end
   $var wire  1 5- instr_srl $end
   $var wire  1 S, instr_srli $end
   $var wire  1 k, instr_sub $end
   $var wire  1 q+ instr_sw $end
   $var wire  1 G. instr_timer $end
   $var wire  1 3 instr_trap $end
   $var wire  1 ?. instr_waitirq $end
   $var wire  1 -- instr_xor $end
   $var wire  1 3, instr_xori $end
   $var wire 32 W6 irq [31:0] $end
   $var wire  1 i# irq_active $end
   $var wire 32 E9 irq_buserror [31:0] $end
   $var wire  1 a# irq_delay $end
   $var wire 32 =9 irq_ebreak [31:0] $end
   $var wire 32 q# irq_mask [31:0] $end
   $var wire 32 y# irq_pending [31:0] $end
   $var wire  2 72 irq_state [1:0] $end
   $var wire 32 59 irq_timer [31:0] $end
   $var wire 32 M9 irqregs_offset [31:0] $end
   $var wire  1 30 is_alu_reg_imm $end
   $var wire  1 ;0 is_alu_reg_reg $end
   $var wire  1 #0 is_beq_bne_blt_bge_bltu_bgeu $end
   $var wire  1 C0 is_compare $end
   $var wire  1 Q/ is_jalr_addi_slti_sltiu_xori_ori_andi $end
   $var wire  1 A/ is_lb_lh_lw_lbu_lhu $end
   $var wire  1 +0 is_lbu_lhu_lw $end
   $var wire  1 9/ is_lui_auipc_jal $end
   $var wire  1 i/ is_lui_auipc_jal_jalr_addi_add_sub $end
   $var wire  1 ; is_rdcycle_rdcycleh_rdinstr_rdinstrh $end
   $var wire  1 Y/ is_sb_sh_sw $end
   $var wire  1 a/ is_sll_srl_sra $end
   $var wire  1 I/ is_slli_srli_srai $end
   $var wire  1 q/ is_slti_blt_slt $end
   $var wire  1 y/ is_sltiu_bltu_sltu $end
   $var wire  1 /* last_mem_valid $end
   $var wire  1 g2 latched_branch $end
   $var wire  1 o2 latched_compr $end
   $var wire  1 13 latched_is_lb $end
   $var wire  1 )3 latched_is_lh $end
   $var wire  1 !3 latched_is_lu $end
   $var wire  5 93 latched_rd [4:0] $end
   $var wire  1 _2 latched_stalu $end
   $var wire  1 W2 latched_store $end
   $var wire  1 w2 latched_trace $end
   $var wire  1 %! launch_next_insn $end
   $var wire 16 ?: mem_16bit_buffer [15:0] $end
   $var wire 32 -5 mem_addr [31:0] $end
   $var wire  1 ?* mem_busy $end
   $var wire  1 ]) mem_do_prefetch $end
   $var wire  1 m) mem_do_rdata $end
   $var wire  1 e) mem_do_rinst $end
   $var wire  1 u) mem_do_wdata $end
   $var wire  1 W" mem_done $end
   $var wire  1 {4 mem_instr $end
   $var wire 32 ]5 mem_la_addr [31:0] $end
   $var wire  1 7: mem_la_firstword $end
   $var wire  1 '* mem_la_firstword_reg $end
   $var wire  1 7: mem_la_firstword_xfer $end
   $var wire  1 M5 mem_la_read $end
   $var wire  1 }) mem_la_secondword $end
   $var wire  1 7: mem_la_use_prefetched_high_word $end
   $var wire 32 e5 mem_la_wdata [31:0] $end
   $var wire  1 U5 mem_la_write $end
   $var wire  4 m5 mem_la_wstrb [3:0] $end
   $var wire 32 E5 mem_rdata [31:0] $end
   $var wire 32 O" mem_rdata_latched [31:0] $end
   $var wire 32 O" mem_rdata_latched_noshuffle [31:0] $end
   $var wire 32 Q# mem_rdata_q [31:0] $end
   $var wire 32 7" mem_rdata_word [31:0] $end
   $var wire  1 %5 mem_ready $end
   $var wire  2 M) mem_state [1:0] $end
   $var wire  1 s4 mem_valid $end
   $var wire 32 55 mem_wdata [31:0] $end
   $var wire  2 U) mem_wordsize [1:0] $end
   $var wire  4 =5 mem_wstrb [3:0] $end
   $var wire  1 ?" mem_xfer $end
   $var wire 64 C new_ascii_instr [63:0] $end
   $var wire 32 Q# next_insn_opcode [31:0] $end
   $var wire 32 Q3 next_irq_pending [31:0] $end
   $var wire 32 + next_pc [31:0] $end
   $var wire 32 {8 pcpi_div_rd [31:0] $end
   $var wire  1 7: pcpi_div_ready $end
   $var wire  1 7: pcpi_div_wait $end
   $var wire  1 7: pcpi_div_wr $end
   $var wire 32 }5 pcpi_insn [31:0] $end
   $var wire 32 s8 pcpi_int_rd [31:0] $end
   $var wire  1 7: pcpi_int_ready $end
   $var wire  1 7: pcpi_int_wait $end
   $var wire  1 7: pcpi_int_wr $end
   $var wire 32 {8 pcpi_mul_rd [31:0] $end
   $var wire  1 7: pcpi_mul_ready $end
   $var wire  1 7: pcpi_mul_wait $end
   $var wire  1 7: pcpi_mul_wr $end
   $var wire 32 ?6 pcpi_rd [31:0] $end
   $var wire  1 O6 pcpi_ready $end
   $var wire 32 '6 pcpi_rs1 [31:0] $end
   $var wire 32 /6 pcpi_rs2 [31:0] $end
   $var wire  1 I3 pcpi_timeout $end
   $var wire  4 ); pcpi_timeout_counter [3:0] $end
   $var wire  1 u5 pcpi_valid $end
   $var wire  1 G6 pcpi_wait $end
   $var wire  1 76 pcpi_wr $end
   $var wire  1 7* prefetched_high_word $end
   $var wire 64 k0 q_ascii_instr [63:0] $end
   $var wire 32 {0 q_insn_imm [31:0] $end
   $var wire 32 %1 q_insn_opcode [31:0] $end
   $var wire  5 =1 q_insn_rd [4:0] $end
   $var wire  5 -1 q_insn_rs1 [4:0] $end
   $var wire  5 51 q_insn_rs2 [4:0] $end
   $var wire 32 )# reg_next_pc [31:0] $end
   $var wire 32 1# reg_op1 [31:0] $end
   $var wire 32 9# reg_op2 [31:0] $end
   $var wire 32 A# reg_out [31:0] $end
   $var wire 32 !# reg_pc [31:0] $end
   $var wire  5 I# reg_sh [4:0] $end
   $var wire 32 M9 regfile_size [31:0] $end
   $var wire 32 U9 regindex_bits [31:0] $end
   $var wire  1 c4 resetn $end
   $var wire  1 17 rvfi_halt $end
   $var wire 32 !7 rvfi_insn [31:0] $end
   $var wire  1 97 rvfi_intr $end
   $var wire 32 +8 rvfi_mem_addr [31:0] $end
   $var wire 32 C8 rvfi_mem_rdata [31:0] $end
   $var wire  4 38 rvfi_mem_rmask [3:0] $end
   $var wire 32 K8 rvfi_mem_wdata [31:0] $end
   $var wire  4 ;8 rvfi_mem_wmask [3:0] $end
   $var wire  2 A7 rvfi_mode [1:0] $end
   $var wire 64 o6 rvfi_order [63:0] $end
   $var wire 32 y7 rvfi_pc_rdata [31:0] $end
   $var wire 32 #8 rvfi_pc_wdata [31:0] $end
   $var wire  5 i7 rvfi_rd_addr [4:0] $end
   $var wire 32 q7 rvfi_rd_wdata [31:0] $end
   $var wire  5 I7 rvfi_rs1_addr [4:0] $end
   $var wire 32 Y7 rvfi_rs1_rdata [31:0] $end
   $var wire  5 Q7 rvfi_rs2_addr [4:0] $end
   $var wire 32 a7 rvfi_rs2_rdata [31:0] $end
   $var wire  1 )7 rvfi_trap $end
   $var wire  1 g6 rvfi_valid $end
   $var wire  1 G2 set_mem_do_rdata $end
   $var wire  1 ?2 set_mem_do_rinst $end
   $var wire  1 O2 set_mem_do_wdata $end
   $var wire 32 #$ timer [31:0] $end
   $var wire 36 [8 trace_data [35:0] $end
   $var wire  1 S8 trace_valid $end
   $var wire  1 k4 trap $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#5
b00000000000000000000000000000000 #
b00000000000000000000000000000000 +
13
0;
b0000000000000000000000000000000000000000000000000000000000000000 C
b0000000000000000000000000000000000000000000000000000000000000000 S
b00000000000000000000000000000000 c
b00000 k
b00000 s
b00000 {
0%!
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 -!
b00000000000000000000000000000000 M!
0U!
1]!
0e!
0m!
0u!
b00000000000000000000000000000000 }!
b00000000000000000000000000000000 '"
b00000000000000000000000000000000 /"
b00000000000000000000000000000000 7"
0?"
0G"
b00000000000000000000000000000000 O"
0W"
b0000000000000000000000000000000000000000000000000000000000000000 _"
b0000000000000000000000000000000000000000000000000000000000000000 o"
b00000000000000000000000000000000 !#
b00000000000000000000000000000000 )#
b00000000000000000000000000000000 1#
b00000000000000000000000000000000 9#
b00000000000000000000000000000000 A#
b00000 I#
b00000000000000000000000000000000 Q#
b00000000000000000000000000000000 Y#
0a#
0i#
b00000000000000000000000000000000 q#
b00000000000000000000000000000000 y#
b00000000000000000000000000000000 #$
b00000000000000000000000000000000 +$
b00000000000000000000000000000000 ,$
b00000000000000000000000000000000 -$
b00000000000000000000000000000000 .$
b00000000000000000000000000000000 /$
b00000000000000000000000000000000 0$
b00000000000000000000000000000000 1$
b00000000000000000000000000000000 2$
b00000000000000000000000000000000 3$
b00000000000000000000000000000000 4$
b00000000000000000000000000000000 5$
b00000000000000000000000000000000 6$
b00000000000000000000000000000000 7$
b00000000000000000000000000000000 8$
b00000000000000000000000000000000 9$
b00000000000000000000000000000000 :$
b00000000000000000000000000000000 ;$
b00000000000000000000000000000000 <$
b00000000000000000000000000000000 =$
b00000000000000000000000000000000 >$
b00000000000000000000000000000000 ?$
b00000000000000000000000000000000 @$
b00000000000000000000000000000000 A$
b00000000000000000000000000000000 B$
b00000000000000000000000000000000 C$
b00000000000000000000000000000000 D$
b00000000000000000000000000000000 E$
b00000000000000000000000000000000 F$
b00000000000000000000000000000000 G$
b00000000000000000000000000000000 H$
b00000000000000000000000000000000 I$
b00000000000000000000000000000000 J$
b00000000000000000000000000000000 o&
b00000000000000000000000000000000 w&
b00000000000000000000000000000000 !'
b00000000000000000000000000000000 )'
b00000000000000000000000000000000 1'
b00000000000000000000000000000000 9'
b00000000000000000000000000000000 A'
b00000000000000000000000000000000 I'
b00000000000000000000000000000000 Q'
b00000000000000000000000000000000 Y'
b00000000000000000000000000000000 a'
b00000000000000000000000000000000 i'
b00000000000000000000000000000000 q'
b00000000000000000000000000000000 y'
b00000000000000000000000000000000 #(
b00000000000000000000000000000000 +(
b00000000000000000000000000000000 3(
b00000000000000000000000000000000 ;(
b00000000000000000000000000000000 C(
b00000000000000000000000000000000 K(
b00000000000000000000000000000000 S(
b00000000000000000000000000000000 [(
b00000000000000000000000000000000 c(
b00000000000000000000000000000000 k(
b00000000000000000000000000000000 s(
b00000000000000000000000000000000 {(
b00000000000000000000000000000000 %)
b00000000000000000000000000000000 -)
b00000000000000000000000000000000 5)
b00000000000000000000000000000000 =)
b00000000000000000000000000000000 E)
b00 M)
b00 U)
0])
0e)
0m)
0u)
0})
0'*
0/*
07*
0?*
0G*
0O*
0W*
0_*
0g*
0o*
0w*
0!+
0)+
01+
09+
0A+
0I+
0Q+
0Y+
0a+
0i+
0q+
0y+
0#,
0+,
03,
0;,
0C,
0K,
0S,
0[,
0c,
0k,
0s,
0{,
0%-
0--
05-
0=-
0E-
0M-
0U-
0]-
0e-
0m-
0u-
0}-
0'.
0/.
07.
0?.
0G.
b00000 O.
b00000 W.
b00000 _.
b00000000000000000000000000000000 g.
b00000000000000000000000000000000 o.
0w.
0!/
0)/
01/
09/
0A/
0I/
0Q/
0Y/
0a/
0i/
0q/
0y/
0#0
0+0
030
0;0
0C0
b00000000000000000000000000000000 K0
b00000000000000000000000000000000 S0
0[0
0c0
b0000000000000000000000000000000000000000000000000000000000000000 k0
b00000000000000000000000000000000 {0
b00000000000000000000000000000000 %1
b00000 -1
b00000 51
b00000 =1
0E1
0M1
b0000000000000000000000000000000000000000000000000000000000000000 U1
b00000000000000000000000000000000 e1
b00000000000000000000000000000000 m1
b00000 u1
b00000 }1
b00000 '2
b00000000 /2
b00 72
0?2
0G2
0O2
0W2
0_2
0g2
0o2
0w2
0!3
0)3
013
b00000 93
b00000000000000000000000000000000 A3
0I3
b00000000000000000000000000000000 Q3
0Y3
b00000000000000000000000000000000 a3
0i3
0q3
0y3
b00000000000000000000000000000000 #4
b00000000000000000000000000000000 +4
b00000000000000000000000000000000 34
0;4
0C4
0K4
b00000000000000000000000000000000 S4
0[4
0c4
0k4
0s4
0{4
0%5
b00000000000000000000000000000000 -5
b00000000000000000000000000000000 55
b0000 =5
b00000000000000000000000000000000 E5
0M5
0U5
b00000000000000000000000000000000 ]5
b00000000000000000000000000000000 e5
b1111 m5
0u5
b00000000000000000000000000000000 }5
b00000000000000000000000000000000 '6
b00000000000000000000000000000000 /6
076
b00000000000000000000000000000000 ?6
0G6
0O6
b00000000000000000000000000000000 W6
b00000000000000000000000000000000 _6
0g6
b0000000000000000000000000000000000000000000000000000000000000000 o6
b00000000000000000000000000000000 !7
0)7
017
097
b00 A7
b00000 I7
b00000 Q7
b00000000000000000000000000000000 Y7
b00000000000000000000000000000000 a7
b00000 i7
b00000000000000000000000000000000 q7
b00000000000000000000000000000000 y7
b00000000000000000000000000000000 #8
b00000000000000000000000000000000 +8
b0000 38
b0000 ;8
b00000000000000000000000000000000 C8
b00000000000000000000000000000000 K8
0S8
b000000000000000000000000000000000000 [8
b00000000000000000000000000000001 k8
b00000000000000000000000000000000 s8
b00000000000000000000000000000000 {8
b11111111111111111111111111111111 %9
b00000000000000000000000000010000 -9
b00000000000000000000000000000000 59
b00000000000000000000000000000001 =9
b00000000000000000000000000000010 E9
b00000000000000000000000000100000 M9
b00000000000000000000000000000101 U9
0]9
b000100000000000000000000000000000000 e9
b001000000000000000000000000000000000 u9
b100000000000000000000000000000000000 ':
07:
b0000000000000000 ?:
b10000000 G:
b01000000 O:
b00100000 W:
b00010000 _:
b00001000 g:
b00000100 o:
b00000010 w:
b00000001 !;
b0000 );
b00000 1;
#10
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110011001100101011101000110001101101000 -!
b11111111111111111111111111111111 q#
b01000000 /2
1[4
b11 A7
#15
0[4
#20
#25
1[4
#30
1c4
#35
0[4
#40
b0000000000000000000000000000000000000000000000000000000000000001 _"
1e)
1?*
1[4
1M5
#45
0[4
#50
b0000000000000000000000000000000000000000000000000000000000000010 _"
b01 M)
1[4
1s4
1{4
0M5
#55
b00000000000100010000000100010011 7"
1?"
b00000000000100010000000100010011 O"
1W"
0[4
1%5
b00000000000100010000000100010011 E5
#60
1%!
0?"
0W"
b0000000000000000000000000000000000000000000000000000000000000011 _"
b00000000000100010000000100010011 Q#
b00 M)
0e)
0?*
b00010 O.
b00010 W.
b00001 _.
b00000000000000010000100000000000 o.
1w.
130
1[4
0s4
#65
0[4
0%5
#70
b00000000000100010000000100010011 #
b00000000000000000000000000000100 +
03
b0000000000000000000000000000000001100001011001000110010001101001 C
b0000000000000000000000000000000001100001011001000110010001101001 S
b00000000000000000000000000000001 c
b00010 k
b00001 s
b00010 {
0%!
b00000000000000000000000000000000000000000000000000000000000000000000000000000000011011000110010001011111011100100111001100110001 -!
b0000000000000000000000000000000000000000000000000000000000000100 _"
b0000000000000000000000000000000000000000000000000000000000000001 o"
b00000000000000000000000000000100 )#
1])
1?*
1y+
b00000000000000000000000000000001 g.
0w.
1!/
1Q/
1E1
1M1
b00100000 /2
b00010 93
1[4
1M5
b00000000000000000000000000000100 ]5
#75
0[4
#80
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100101011110000110010101100011 -!
b00000000000000000000000000000001 M!
0]!
1e!
1m!
b0000000000000000000000000000000000000000000000000000000000000101 _"
b00000000000000000000000000000001 9#
b01 M)
1e)
0!/
1i/
1[0
b0000000000000000000000000000000001100001011001000110010001101001 k0
b00000000000000000000000000000001 {0
b00000000000100010000000100010011 %1
b00010 -1
b00001 51
b00010 =1
0E1
b0000000000000000000000000000000001100001011001000110010001101001 U1
b00000000000000000000000000000001 e1
b00000000000100010000000100010011 m1
b00010 u1
b00001 }1
b00010 '2
b00001000 /2
b00000000000000000000000000000001 #4
1[4
1s4
b00000000000000000000000000000100 -5
0M5
b00000000000000000000000000000001 e5
b00000000000000000000000000000001 /6
b00000000000100010000000100010011 !7
#85
b00000000001000010000000100010011 7"
1?"
b00000000001000010000000100010011 O"
1W"
0[4
1%5
b00000000001000010000000100010011 E5
#90
1%!
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110011001100101011101000110001101101000 -!
1u!
b00000000000000000000000000000001 }!
0?"
0W"
b0000000000000000000000000000000000000000000000000000000000000110 _"
b00000000000000000000000000000001 A#
b00000000001000010000000100010011 Q#
b00 M)
0])
0e)
0?*
b00010 _.
b00000000000000010000000000000010 o.
1w.
b01000000 /2
1W2
1_2
b00000000000000000000000000000001 a3
1[4
0s4
b00000000000000000000000000000000 ]5
b00010 I7
#95
0[4
0%5
#100
b00000000001000010000000100010011 #
b00000000000000000000000000001000 +
b00000000000000000000000000000010 c
b00010 s
0%!
b00000000000000000000000000000000000000000000000000000000000000000000000000000000011011000110010001011111011100100111001100110001 -!
b00000000000000000000000000000000 M!
0u!
b00000000000000000000000000000000 }!
b00000000000000000000000000000001 '"
b00000000000000000000000000000001 /"
b0000000000000000000000000000000000000000000000000000000000000111 _"
b0000000000000000000000000000000000000000000000000000000000000010 o"
b00000000000000000000000000000100 !#
b00000000000000000000000000001000 )#
b00000000000000000000000000000000 A#
b00000000000000000000000000000100 Y#
b00000000000000000000000000000001 -$
b00000000000000000000000000000001 w&
1])
1?*
b00000000000000000000000000000010 g.
0w.
1!/
0i/
0[0
1E1
b00100000 /2
0W2
0_2
b00000000000000000000000000000100 A3
1[4
1M5
b00000000000000000000000000001000 ]5
1g6
b00010 i7
b00000000000000000000000000000001 q7
b00000000000000000000000000000100 #8
#105
0[4
#110
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100101011110000110010101100011 -!
b00000000000000000000000000000011 M!
b0000000000000000000000000000000000000000000000000000000000001000 _"
b00000000000000000000000000000001 1#
b00000000000000000000000000000010 9#
b01 M)
1e)
0!/
1i/
b00000000000000000000000000000001 K0
1[0
b00000000000000000000000000000010 {0
b00000000001000010000000100010011 %1
b00010 51
0E1
b00000000000000000000000000000010 e1
b00000000001000010000000100010011 m1
b00010 }1
b00001000 /2
b00000000000000000000000000000000 A3
b00000000000000000000000000000000 a3
b00000000000000000000000000000011 #4
b00000000000000000000000000000100 +4
1[4
1s4
b00000000000000000000000000001000 -5
0M5
b00000000000000000000000000000010 e5
b00000000000000000000000000000001 '6
b00000000000000000000000000000010 /6
0g6
b0000000000000000000000000000000000000000000000000000000000000001 o6
b00000000001000010000000100010011 !7
b00000 I7
b00000 i7
b00000000000000000000000000000000 q7
b00000000000000000000000000000100 y7
#115
0[4
#120
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000110011001100101011101000110001101101000 -!
1u!
b00000000000000000000000000000011 }!
b0000000000000000000000000000000000000000000000000000000000001001 _"
b00000000000000000000000000000110 A#
1/*
b01000000 /2
1W2
1_2
b00000000000000000000000000000011 a3
1[4
b00010 I7
b00000000000000000000000000000001 Y7
#125
0[4
#130
0u!
b00000000000000000000000000000000 }!
b00000000000000000000000000000011 '"
b00000000000000000000000000000011 /"
b0000000000000000000000000000000000000000000000000000000000001010 _"
b00000000000000000000000000001000 !#
b00000000000000000000000000000000 A#
b00000000000000000000000000000011 -$
b00000000000000000000000000000011 w&
0W2
0_2
b00000000000000000000000000001000 A3
1[4
b00010 i7
b00000000000000000000000000000011 q7
#135
0[4
#140
b0000000000000000000000000000000000000000000000000000000000001011 _"
1[4
#145
0[4
#150
b0000000000000000000000000000000000000000000000000000000000001100 _"
1[4
